{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","routes/Cart.js"],"names":["Table","React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_jsx","responsiveClass","children","Child","memo","createElement","Cart","useMemo","state","a","useSelector","user","console","log","dispatch","useDispatch","count","setCount","useState","onClick","name","age","increase","cart","map","i","id","addCount"],"mappings":"uJAqCeA,MA/BYC,aAAiB,CAAAC,EAWzCC,KAAQ,IAXkC,SAC3CC,EAAQ,UACRC,EAAS,QACTC,EAAO,SACPC,EAAQ,WACRC,EAAU,MACVC,EAAK,KACLC,EAAI,QACJC,EAAO,WACPC,KACGC,GACJX,EACC,MAAMY,EAAoBC,YAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJO,OAAOJ,EAAiB,KAAAI,OAAIP,GAAWD,GAAQ,GAAJQ,OAAOJ,EAAiB,KAAAI,OAAIR,GAAQJ,GAAW,GAAJY,OAAOJ,EAAiB,KAAAI,OAAuB,kBAAZZ,EAAuB,WAAHY,OAAcZ,GAAY,WAAaC,GAAY,GAAJW,OAAOJ,EAAiB,aAAaN,GAAc,GAAJU,OAAOJ,EAAiB,eAAeL,GAAS,GAAJS,OAAOJ,EAAiB,WACzWK,EAAqBC,cAAK,QAAS,IACpCP,EACHR,UAAWW,EACXb,IAAKA,IAEP,GAAIS,EAAY,CACd,IAAIS,EAAkB,GAAHH,OAAMJ,EAAiB,eAI1C,MAH0B,kBAAfF,IACTS,EAAkB,GAAHH,OAAMG,EAAe,KAAAH,OAAIN,IAEtBQ,cAAK,MAAO,CAC9Bf,UAAWgB,EACXC,SAAUH,IAGd,OAAOA,I,wBC5BT,IAAII,EAAQC,gBAAM,WACd,OAAOvB,IAAAwB,cAAA,WAAK,yBAsDDC,UA/Cf,WAEiBC,kBAAQ,OAAsB,CAACC,IAA5C,IAEIC,EAAIC,YAAaF,GAAiBA,EAAMG,MAC5CC,QAAQC,IAAIJ,GAEZ,IAAID,EAAQE,YAAaF,GAAQA,GAC7BM,EAAWC,eACVC,EAAOC,GAAYC,mBAAS,GAEjC,OACIrC,IAAAwB,cAAA,WACIxB,IAAAwB,cAACF,EAAK,MACNtB,IAAAwB,cAAA,UAAQc,QAASA,KAAMF,EAASD,EAAM,KAAM,KAC5CnC,IAAAwB,cAAA,UAAKG,EAAMG,KAAKS,KAAK,IAAEZ,EAAMG,KAAKU,IAAI,mCACtCxC,IAAAwB,cAAA,UAAQc,QAASA,KAAML,EAASQ,YAAS,OAAO,gBAChDzC,IAAAwB,cAACzB,EAAK,KACFC,IAAAwB,cAAA,aACIxB,IAAAwB,cAAA,UACIxB,IAAAwB,cAAA,UAAI,KACJxB,IAAAwB,cAAA,UAAI,sBACJxB,IAAAwB,cAAA,UAAI,gBACJxB,IAAAwB,cAAA,UAAI,8BAGZxB,IAAAwB,cAAA,aAEQG,EAAMe,KAAKC,IAAI,CAACf,EAAGgB,IACnB5C,IAAAwB,cAAA,UACAxB,IAAAwB,cAAA,UAAMG,EAAMe,KAAKE,GAAGC,IACpB7C,IAAAwB,cAAA,UAAMG,EAAMe,KAAKE,GAAGL,MACpBvC,IAAAwB,cAAA,UAAMG,EAAMe,KAAKE,GAAGT,OACpBnC,IAAAwB,cAAA,UACIxB,IAAAwB,cAAA,UAAQc,QAASA,KACbL,EAAUa,YAASnB,EAAMe,KAAKE,GAAGC,OAClC","file":"static/js/4.13fe1b17.chunk.js","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import {Table} from 'react-bootstrap'\nimport React, { memo, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeName, increase } from './../store/userSlice.js'\nimport { addCount } from './../store.js'\n\n\nlet Child = memo( function(){\n    return <div>자식임</div>\n})\n\nfunction heavy(){\n    return //반복문 엄청 많이 돌림\n}\n\nfunction Cart(){\n\n    let result = useMemo(()=>{return heavy()}, [state])\n\n    let a = useSelector((state)=>{ return state.user })\n    console.log(a)\n\n    let state = useSelector((state)=>state )\n    let dispatch = useDispatch()\n    let [count, setCount] = useState(0)\n\n    return (\n        <div>\n            <Child></Child>\n            <button onClick={()=>{ setCount(count+1) }}>+</button>\n            <h6>{state.user.name} {state.user.age}의 장바구니</h6>\n            <button onClick={()=>{ dispatch(increase(10))}}>버튼</button>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>상품명</th>\n                        <th>수량</th>\n                        <th>변경하기</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        state.cart.map((a, i)=>\n                        <tr>\n                        <td>{ state.cart[i].id }</td>\n                        <td>{ state.cart[i].name }</td>\n                        <td>{ state.cart[i].count }</td>\n                        <td>\n                            <button onClick={()=>{\n                                dispatch( addCount(state.cart[i].id) )\n                            }}>+</button>\n                        </td>\n                        </tr>\n                        )\n                    }\n                </tbody>\n            </Table> \n        </div>\n    )\n}\n\nexport default Cart"],"sourceRoot":""}