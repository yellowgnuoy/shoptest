{"version":3,"sources":["routes/detail.js"],"names":["BuyBtn","styled","button","_templateObject","_taggedTemplateLiteral","TabContent","_ref","tab","adidas","fade","setFade","useState","stock","useContext","Context1","useEffect","setTimeout","React","createElement","className","title","Detail","props","id","useParams","count","setCount","alert","setAlert","setTab","dispatch","useDispatch","찾은상품","find","x","꺼낸거","localStorage","getItem","JSON","parse","push","Set","Array","from","setItem","stringify","a","clearTimeout","src","width","content","price","onClick","addItem","name","Nav","variant","defaultActiveKey","Item","Link","eventKey"],"mappings":"4LAqBA,IAAIA,EAASC,IAAOC,OAAMC,MAAAC,YAAA,2EAyG1B,SAASC,EAAUC,GAAgB,IAAf,IAACC,EAAG,OAAEC,GAAOF,GAExBG,EAAMC,GAAWC,mBAAS,KAC3B,MAACC,GAASC,qBAAWC,KASzB,OAPAC,oBAAU,KACNC,WAAW,KAAMN,EAAQ,QAAU,KAC5B,KACHA,EAAQ,MAEb,CAACH,IAEGU,IAAAC,cAAA,OAAKC,UAAW,SAAWV,GAChC,CAACQ,IAAAC,cAAA,WAAMV,EAAO,GAAGY,OAAcH,IAAAC,cAAA,WAAK,iBAAWD,IAAAC,cAAA,WAAK,kBAAWX,IAOtDc,UAxGf,SAAgBC,GAEZ,IAAI,MAACV,GAASC,qBAAWC,MACrB,GAACS,GAAMC,eACNC,EAAOC,GAAYf,mBAAS,IAC5BgB,EAAOC,GAAYjB,oBAAS,IAC5BJ,EAAKsB,GAAUlB,mBAAS,GACzBmB,EAAWC,cACXC,EAAOV,EAAMd,OAAOyB,KAAKC,GAAKA,EAAEX,IAAMA,GA8B1C,OA3BAR,oBAAU,KACN,IAAIoB,EAAMC,aAAaC,QAAQ,WAC/BF,EAAMG,KAAKC,MAAMJ,GACjBA,EAAIK,KAAKR,EAAKT,IACdY,EAAM,IAAIM,IAAIN,GACdA,EAAMO,MAAMC,KAAKR,GACjBC,aAAaQ,QAAQ,UAAWN,KAAKO,UAAUV,KAChD,IAIHpB,oBAAU,KAEN,IAAI+B,EAAI9B,WAAW,KAAMY,GAAS,IAAU,KAC5C,MAAO,KACHmB,aAAaD,KAElB,IAWC7B,IAAAC,cAAA,OAAKC,UAAU,aAEE,GAATQ,EACEV,IAAAC,cAAA,OAAKC,UAAU,uBAAsB,wDAGrC,KAONF,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAA,OAAKC,UAAU,YACfF,IAAAC,cAAA,OAAK8B,IAA8B,iBAAkBC,MAAM,SAE3DhC,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,MAAIC,UAAU,QAAQG,EAAMd,OAAOe,GAAIH,OACvCH,IAAAC,cAAA,SAAII,EAAMd,OAAOe,GAAI2B,SACrBjC,IAAAC,cAAA,SAAII,EAAMd,OAAOe,GAAI4B,OACrBlC,IAAAC,cAAClB,EAAM,CAACoD,QAASA,KACbtB,EAASuB,YAAS,CAAC9B,GAAK,EAAG+B,KAAO,0BAA2B7B,MAAQ,OACtE,8BAIXR,IAAAC,cAACqC,IAAG,CAACC,QAAQ,OAAQC,iBAAiB,SAClCxC,IAAAC,cAACqC,IAAIG,KAAI,KACLzC,IAAAC,cAACqC,IAAII,KAAI,CAACP,QAASA,KAAMvB,EAAO,IAAK+B,SAAS,SAAQ,kBAE1D3C,IAAAC,cAACqC,IAAIG,KAAI,KACLzC,IAAAC,cAACqC,IAAII,KAAI,CAACP,QAASA,KAAMvB,EAAO,IAAK+B,SAAS,SAAQ,kBAE1D3C,IAAAC,cAACqC,IAAIG,KAAI,KACLzC,IAAAC,cAACqC,IAAII,KAAI,CAACP,QAASA,KAAMvB,EAAO,IAAK+B,SAAS,SAAQ,mBAG9D3C,IAAAC,cAACb,EAAU,CAACG,OAAQc,EAAMd,OAAQD,IAAKA,IACtCK,EAAM","file":"static/js/5.b6820dbb.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport styled from 'styled-components'\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSSRSafeId } from \"@react-aria/ssr\";\nimport { Nav } from 'react-bootstrap';\nimport '../App.css';\nimport {Context1} from './../App.js'\nimport { addItem } from \"./../store.js\"\nimport { useDispatch } from \"react-redux\";\n\n\n// let YellowBtn = styled.button`\n//     background : ${ props => props.bg };\n//     color : ${ props => props.bg == 'blue' ? 'white' : 'black' };\n//     padding : 10px;\n// `\n\n// let NewBtn = styled.button(YellowBtn)`\n\n// `\n\nlet BuyBtn = styled.button`\n    background : gray;\n    padding : 10px;\n    color : white;\n`\n\n    // function Detail() {\n    // let [num, setNum] = useState('')\n\n    // useEffect(()=>{\n    // if (isNaN(num) == true){\n    //     alert('그러지마세요')\n    // }\n    // }, [num])\n\n    // return (\n    // <input onChange={ (e) => {setNum(e.target.value) } } />\n    // )\n    // }\n\n\nfunction Detail(props) {\n\n    let {stock} = useContext(Context1)\n    let {id} = useParams();\n    let [count, setCount] = useState(0)\n    let [alert, setAlert] = useState(true)\n    let [tab, setTab] = useState(0)\n    let dispatch = useDispatch()\n    let 찾은상품 = props.adidas.find(x => x.id == id);\n\n\n    useEffect(()=>{\n        let 꺼낸거 = localStorage.getItem('watched')\n        꺼낸거 = JSON.parse(꺼낸거)\n        꺼낸거.push(찾은상품.id)\n        꺼낸거 = new Set(꺼낸거)\n        꺼낸거 = Array.from(꺼낸거)\n        localStorage.setItem('watched', JSON.stringify(꺼낸거))\n    }, [])\n\n\n        \n    useEffect(()=>{\n        //mount, update시 여기 코드 실행됨\n        let a = setTimeout(()=>{ setAlert(false) }, 2000)\n        return ()=>{\n            clearTimeout(a)\n        }\n    }, [])\n\n    // useEffect(()=>{ }) 재렌더링마다 코드 실행하고 싶을 때\n    // useEffect(()=>{ }, []) mount시 1회 코드실행하고 싶을 때\n    // useEffect(()=>{\n    //     return ()=>{\n    //         unmount시 1회 코드실행하고 싶을 때\n    //     }\n    // }, [])\n\n    return (\n        <div className=\"container\">\n            {\n                alert == true\n                ? <div className=\"alert alert-warning\">\n                2초 이내 구매시 할인\n                </div>\n                : null\n            }\n\n            {/* {count}\n            <button onClick={()=>{ setCount(count+1) }}></button> */}\n            {/* <YellowBtn bg=\"blue\">버튼</YellowBtn>\n            <YellowBtn bg=\"yellow\">버튼</YellowBtn> */}\n            <div className=\"row\">\n            <div className=\"col-md-6\">\n            <img src={process.env.PUBLIC_URL + '/img/Simg1.png'} width=\"50%\"/>\n            </div>\n            <div className=\"col-md-6\">\n                <h4 className=\"pt-5\">{props.adidas[id].title}</h4>\n                <p>{props.adidas[id].content}</p>\n                <p>{props.adidas[id].price}</p>\n                <BuyBtn onClick={()=>{\n                    dispatch(addItem( {id : 1, name : '[24SS] [IG6186] BERMUDA', count : 3}))\n                }}>주문하기</BuyBtn> \n            </div>\n            </div>\n\n        <Nav variant=\"tabs\"  defaultActiveKey=\"link0\">\n            <Nav.Item>\n                <Nav.Link onClick={()=>{ setTab(0) }}eventKey=\"link0\">버튼0</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link onClick={()=>{ setTab(1) }}eventKey=\"link1\">버튼1</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link onClick={()=>{ setTab(2) }}eventKey=\"link2\">버튼2</Nav.Link>\n            </Nav.Item>\n        </Nav>\n        <TabContent adidas={props.adidas} tab={tab}/>\n        {stock[0]}\n\n        </div> \n    )\n}\n\nfunction TabContent({tab, adidas}){\n\n    let [fade, setFade] = useState('')\n    let {stock} = useContext(Context1)\n\n    useEffect(()=>{\n        setTimeout(()=>{ setFade('end') }, 100)\n        return ()=>{\n            setFade('')\n        }\n    }, [tab])\n    \n    return <div className={'start ' + fade}>\n    { [<div>{adidas[0].title}</div>, <div>내용1</div>, <div>내용2</div>][tab] }\n    </div>\n}\n\n\n\n\nexport default Detail;"],"sourceRoot":""}